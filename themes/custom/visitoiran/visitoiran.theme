<?php

/**
 * @file
 * Functions to support theming in the visitoiran theme.
 */

/**
 * Implements hook_preprocess_HOOK() for html.html.twig.
 */
function visitoiran_preprocess_html(array &$variables) {
    /* Add class to html tag */
    //$variables['html_attributes']->addClass('no-js');

    // Don't display the site name twice on the front page (and potentially others)
    /*if (isset($variables['head_title_array']['title']) && isset($variables['head_title_array']['name']) && ($variables['head_title_array']['title'] == $variables['head_title_array']['name'])) {
      $variables['head_title'] = $variables['head_title_array']['name'];
    }*/


    $direction = \Drupal::languageManager()
        ->getCurrentLanguage()
        ->getDirection();
    if ($direction == 'rtl') {
        $variables['#attached']['library'][] = 'visitoiran/visito-theme-rtl';
    }

}

/**
 * Implements hook_page_attachments_alter().
 */
function visitoiran_page_attachments_alter(array &$page) {
    // Tell IE to use latest rendering engine (not to use compatibility mode).
    /*$ie_edge = [
      '#type' => 'html_tag',
      '#tag' => 'meta',
      '#attributes' => [
      'http-equiv' => 'X-UA-Compatible',
      'content' => 'IE=edge',
      ],
    ];
    $page['#attached']['html_head'][] = [$ie_edge, 'ie_edge'];*/
}

/**
 * Implements hook_preprocess_page() for page.html.twig.
 */
function visitoiran_preprocess_page(array &$variables) {
    setVisitoiran($variables);
}

/**
 * Implements hook_theme_suggestions_page_alter().
 */
function visitoiran_theme_suggestions_page_alter(array &$suggestions, array $variables) {

}

/**
 * Implements hook_theme_suggestions_node_alter().
 */
function visitoiran_theme_suggestions_node_alter(array &$suggestions, array $variables) {

    $node = $variables['elements']['#node'];
    if ($variables['elements']['#view_mode'] == "full") {
        $suggestions[] = 'node__title_' . strtolower(str_replace(' ', '_', $node->getTitle()));
    }
    $suggestions[] = 'node__' . strtolower(str_replace(' ', '_', $node->getType()))
        . '_' . \Drupal::languageManager()->getCurrentLanguage()->getId() . '__' . $variables['elements']['#view_mode'];
}

/**
 * Implements hook_preprocess_HOOK() for Block document templates.
 */
function visitoiran_preprocess_block(array &$variables) {
    setVisitoiran($variables);
}

/**
 * Implements hook_theme_suggestions_field_alter().
 */
function visitoiran_theme_suggestions_field_alter(array &$suggestions, array $variables) {
    /*$element = $variables['element'];
    $suggestions[] = 'field__' . $element['#view_mode'];
    $suggestions[] = 'field__' . $element['#view_mode'] . '__' . $element['#field_name'];*/
}

/**
 * Implements hook_theme_suggestions_field_alter().
 */
function visitoiran_theme_suggestions_fieldset_alter(array &$suggestions, array $variables) {
    /*$element = $variables['element'];
    if (isset($element['#attributes']['class']) && in_array('form-composite', $element['#attributes']['class'])) {
      $suggestions[] = 'fieldset__form_composite';
    }*/
}

/**
 * Implements hook_preprocess_node().
 */
function visitoiran_preprocess_node(array &$variables) {
    // Default to turning off byline/submitted.
    //$variables['display_submitted'] = FALSE;
    $variables['base_path'] = base_path();
    $variables['language_id'] = \Drupal::languageManager()->getCurrentLanguage()->getId();
    setVisitoiran($variables);

}

/**
 * Implements hook_theme_suggestions_views_view_alter().
 */
function visitoiran_theme_suggestions_views_view_alter(array &$suggestions, array $variables) {
    $suggestions[] = 'view__view_' . strtolower(str_replace(' ', '_', $variables['view']->getTitle()));
}

/**
 * Implements hook_theme_suggestions_views_view_fields_alter().
 */
function visitoiran_theme_suggestions_views_view_fields_alter(array &$suggestions, array $variables) {
    $suggestions[] = 'view__view__fields_' . strtolower(str_replace(' ', '_', $variables['view']->getTitle()));
}

/**
 * Implements hook_preprocess_form().
 */
function visitoiran_preprocess_form(array &$variables) {
    //$variables['attributes']['novalidate'] = 'novalidate';
}

/**
 * Implements hook_preprocess_select().
 */
function visitoiran_preprocess_select(array &$variables) {
    //$variables['attributes']['class'][] = 'select-chosen';
}

/**
 * Implements hook_preprocess_field().
 */
/*function visitoiran_preprocess_field(array &$variables, $hook) {
    $element = $variables['element'];
    switch ($element['#field_name']) {
        case 'title' :
            var_dump($element);
            break;
    }
}*/

/**
 * Implements hook_preprocess_details().
 */
function visitoiran_preprocess_details(array &$variables) {
    /*$variables['attributes']['class'][] = 'details';
    $variables['summary_attributes']['class'] = 'summary';*/
}

/**
 * Implements hook_theme_suggestions_details_alter().
 */
function visitoiran_theme_suggestions_details_alter(array &$suggestions, array $variables) {

}

/**
 * Implements hook_preprocess_menu_local_task().
 */
function visitoiran_preprocess_menu_local_task(array &$variables) {
    //$variables['element']['#link']['url']->setOption('attributes', ['class'=>'rounded']);
}

function visitoiran_form_search_block_form_alter(&$form, &$form_state, $form_id) {
    $form['keys']['#attributes']['placeholder'] = t('Search');
    $form['keys']['#attributes']['autocomplete'] = 'off';
    $lang = NULL;
    if (\Drupal::languageManager()->getCurrentLanguage()->getId() != 'en') {
        $lang = \Drupal::languageManager()->getCurrentLanguage()->getId();
	$form['#action'] = base_path() . $lang . '/search';
    } else {
	$form['#action'] = '/search';
    }
}

function visitoiran_form_alter(&$form, &$form_state, $form_id) {
    if ($form_id == 'views_exposed_form') {
        if (isset($form['title'])) {
            $form['title']['#attributes'] = array('placeholder' => array(t('Search contents below...')));
        }
    }
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */

function visitoiran_theme_suggestions_block_alter(array &$suggestions, array $variables)
{
    $language = $direction = \Drupal::languageManager()
        ->getCurrentLanguage()
        ->getId();
    $block = $variables['elements']['#id'];
    $suggestions[] = 'block__title_' . $language . '_' . strtolower(str_replace(' ', '_', $block));
}

function setVisitoiran(array &$variables) {
    $visitoiran = NULL;
    if (!empty(\Drupal\hubber\Controller\Session::get('visitoiran'))) {
        $visitoiran = \Drupal\hubber\Controller\Session::get('visitoiran');
    }
    $variables['visitoiran'] = $visitoiran;
}


function visitoiran_preprocess_comment(&$variables) {
    $comment = $variables['elements']['#comment'];
    $account = $comment->getOwner();

    $variables['created'] = format_date($comment->getCreatedTime());
    $variables['author'] = drupal_render($username);
    $variables['submitted'] = t('<span class="username">@username</span> <span class="date-time">@datetime</span>', array('@username' => $account->getUserName(), '@datetime' => $variables['created']));
    $variables['permalink'] = $comment->permalink();
}